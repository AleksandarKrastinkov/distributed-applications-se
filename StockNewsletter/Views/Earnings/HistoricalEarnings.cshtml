@model StockNewsletter.Models.CompanyEarnings

@{
    ViewData["Title"] = $"Historical Earnings - {Model.Symbol}";
    var hasQuarterlyData = Model.QuarterlyEarnings != null && Model.QuarterlyEarnings.Count > 0;
    var hasAnnualData = Model.AnnualEarnings != null && Model.AnnualEarnings.Count > 0;
    var hasAnyData = hasQuarterlyData || hasAnnualData;
}

<h1>Historical Earnings for @Model.Symbol</h1>

@if (!hasAnyData)
{
    <div class="alert alert-warning" role="alert">
        <i class="fas fa-exclamation-triangle"></i>
        <strong>Data Unavailable:</strong> Historical earnings data for @Model.Symbol is currently unavailable. 
        This could be due to:
        <br><br>
        <ul class="mb-0">
            <li><strong>API Rate Limits:</strong> We've reached the daily limit of 25 free API calls (resets daily)</li>
            <li><strong>Invalid Symbol:</strong> The stock symbol might not exist or be supported</li>
            <li><strong>No Earnings Data:</strong> This company might not have reported earnings yet</li>
            <li><strong>API Issues:</strong> Temporary issues with the AlphaVantage service</li>
        </ul>
        <br>
        <strong>What you can do:</strong>
        <ul class="mb-0">
            <li>Try again later (API limits reset daily at midnight UTC)</li>
            <li>Verify the stock symbol is correct</li>
            <li>Check financial websites like Yahoo Finance or SEC filings for this data</li>
            <li>Consider upgrading to a premium AlphaVantage API key for unlimited access</li>
        </ul>
    </div>
}
else
{
    <div class="alert alert-success" role="alert">
        <i class="fas fa-check-circle"></i>
        <strong>Data Loaded Successfully:</strong> 
        @if (hasQuarterlyData && hasAnnualData)
        {
            <text>Found @Model.QuarterlyEarnings.Count quarterly and @Model.AnnualEarnings.Count annual earnings records for @Model.Symbol.</text>
        }
        else if (hasQuarterlyData)
        {
            <text>Found @Model.QuarterlyEarnings.Count quarterly earnings records for @Model.Symbol.</text>
        }
        else if (hasAnnualData)
        {
            <text>Found @Model.AnnualEarnings.Count annual earnings records for @Model.Symbol.</text>
        }
    </div>
}

@if (hasQuarterlyData)
{
    <h2>Quarterly Earnings</h2>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Fiscal Quarter End</th>
                    <th>Reported EPS</th>
                    <th>Estimated EPS</th>
                    <th>Surprise</th>
                    <th>Surprise %</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var quarter in Model.QuarterlyEarnings)
                {
                    <tr>
                        <td>@quarter.FiscalDateEnding</td>
                        <td>@(string.IsNullOrEmpty(quarter.ReportedEPS) ? "N/A" : quarter.ReportedEPS)</td>
                        <td>@(string.IsNullOrEmpty(quarter.EstimatedEPS) ? "N/A" : quarter.EstimatedEPS)</td>
                        <td>@(string.IsNullOrEmpty(quarter.Surprise) ? "N/A" : quarter.Surprise)</td>
                        <td>@(string.IsNullOrEmpty(quarter.SurprisePercentage) ? "N/A" : quarter.SurprisePercentage + "%")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@if (hasAnnualData)
{
    <h2>Annual Earnings</h2>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Fiscal Year End</th>
                    <th>Reported EPS</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var annual in Model.AnnualEarnings)
                {
                    <tr>
                        <td>@annual.FiscalDateEnding</td>
                        <td>@(string.IsNullOrEmpty(annual.ReportedEPS) ? "N/A" : annual.ReportedEPS)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<div class="mt-3">
    <a asp-action="EarningsCalendar" class="btn btn-secondary">Back to Calendar</a>
    @if (hasAnyData)
    {
        <button class="btn btn-info" onclick="window.location.reload()">Refresh Data</button>
    }
</div> 